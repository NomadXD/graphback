import { InputModelTypeContext } from '@graphback/core';
import { SchemaFormatter } from './SchemaFormatter'
import { generateSchemaString } from './schemaTemplate';
import { buildTargetContext, createCustomSchemaContext, TargetContext } from './targetSchemaContext';

// TODO: Remove this field as it is legacy code
/**
 * Generate schema string based on the input model.
 *
 * Schema is generated by passing type `inputContext` array containing information about all
 * provided types that needs to be included.
 */
export class SchemaGenerator {
    private context: TargetContext
    private inputContext: InputModelTypeContext[]
    private formatter: SchemaFormatter;

    constructor(inputContext: InputModelTypeContext[], formatter?: SchemaFormatter) {
        this.inputContext = inputContext
        this.formatter = formatter;
    }

    /**
     * Generate output schema as string
     */
    public generate() {
        this.context = buildTargetContext(this.inputContext)
        const customContext = createCustomSchemaContext(this.inputContext)
        const schemaString = generateSchemaString(this.context, customContext)
        if (this.formatter) {
            return this.formatter.format(schemaString);
        }

        return schemaString
    }
}
